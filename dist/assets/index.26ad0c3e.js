var i=Object.defineProperty;var c=(t,e,s)=>e in t?i(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var n=(t,e,s)=>(c(t,typeof e!="symbol"?e+"":e,s),s);import{g as u,v as m,a as d}from"./values.00a7d94f.js";class h{constructor(e){n(this,"values");n(this,"request");var s,o;this.secrets=e,this.request=a=>fetch(`${e.managementApiUrl}${a}?api-version=${e.apiVersion}`,e.token?{headers:{Authorization:e.token}}:void 0),this.values=u(m),Object.entries(this.values).forEach(([a,r])=>{const l=document.getElementById(`values.${a}`);l&&(l.innerText=r)}),(s=document.getElementById("message"))==null||s.setAttribute("placeholder",this.values.placeholder),(o=document.getElementById("form"))==null||o.setAttribute("action",this.values.actionUrl)}}async function p(){const t=await d("app"),e=new h(t);!t.userId||e.request(`/users/${t.userId}`).then(s=>s.json()).then(({properties:s})=>{s.email&&(document.getElementById("email").value=s.email)})}p().catch(t=>console.error("Failed to retrieve secrets from the Developer Portal. The app might not work as expected!",t)).finally(()=>{for(const t of document.getElementsByClassName("loading"))t.classList.remove("loading")});
